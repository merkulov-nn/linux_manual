Команды линукса

ssh-keygen комадна для генирации ssh ключа
ssh test@127.0.0.1 -p 2222 команда для входа на сервер
authorized_keys  название парки для ssh ключа
sudo groupadd docker команда для проерки группы докера
sudo usermod -aG docker $USER команда чтобы добавить супер пользователя в докер

#посе того как ммы установили докер и добавили права супер пользователя, сервак необходимо перезагрузить, ну или перелогинится, чтобы изминия вступили в силу.#


whoami команда которая позволяет узнать кто мы
pwd команда чтобы узнать где мы
ls ктоманда чтобы узнать что у нас есть в каталогге (в папке)
( если нам надо узнат кто созда файл или каталок,  кто его может редактировать, кто может его читать,  когда его созда то мы используем ls -l )
cat команда что бы сто то прочитать. ( еслинам надо узнать что находиться в вайле мы используем cat)
cd команда чтобы переходить по файловой системе ( если нам надо перейти в каталог используем cd если нам надо перейти на директорию ниже используем cd.. эт нам позвоит перейти на нижнюю диркторию )
clear отчищает командную строку.
head -n выводит первые  строки файла
tail -n вывдит последние строки файла
| весь вывод первой конманды передается второй, обеденение в одну строку нескольких команд
-rw-r--r-- это означает что владелец файла имеет право на чтение и запись а остальные пользователи тока на чтение
drwxr-xr-x  говорит нам, что владелец каталога может читать, записывать и выполнять его, а остальные пользователи могут только читать и выполнять
Изменение прав доступа
Когда мы разобрались, как просматривать текущие разрешения файлов и каталогов, давайте перейдем к изменению прав доступа с использованием команды chmod.
Сделать это можно с помощью буквенной и численной нотаций, для директорий и файлов, а также рекурсивно, изменяя права для всех вложенных объектов в указанной директории.
Символьная нотация
Символьная нотация в команде chmod позволяет вам изменять права доступа к файлам и каталогам с использованием более интуитивного и читаемого подхода. Она позволяет указать,
какие разрешения должны быть установлены или изменены для владельца файла, группы и остальных пользователей.

Синтаксис у символьной нотации следующий:
chmod [ugoa] [+-=] [rwx] файл(ы)


Где:

[ugoa] указывает, к кому применяются изменения:
u: владелец файла.
g: группа файла.
o: остальные пользователи (не владелец и не входящие в группу).
a: все (при использовании заменяет собой ugo).
[+-=] определяет, что нужно сделать с разрешениями:
+: добавить разрешение.
-: удалить разрешение.
=: установить разрешение точно (заменить текущие разрешения).
— [rwx] представляет собой комбинацию символов `r`, `w` и `x`, обозначающих разрешения:
r: разрешение на чтение.
w: разрешение на запись.
x: разрешение на выполнение.
Примеры использования символьной нотации:

chmod u+x файл — добавить право выполнения для владельца файла.
chmod go-rw файл — удалить право чтения и записи для группы и остальных пользователей.
chmod a=rwx файл — установить полные права (чтение, запись и выполнение) для всех.


Числовая нотация
Другим способом изменения прав доступа к файлам и каталогам в команде chmod является использование числовой нотации. В этом случае вы используете числа для представления разрешений и их комбинаций. Этот >

Числовая нотация состоит из трех цифр, где каждая цифра представляет разрешения для владельца, группы и остальных пользователей соответственно. Каждая цифра состоит из суммы разных значений, присвоенных >

4 — разрешение на чтение (read).
2 — разрешение на запись (write).
1 — разрешение на выполнение (execute).
0 — отсутствие разрешения.
Для установки конкретных разрешений, сложите соответствующие значения:

Если вы хотите только разрешение на чтение, используйте 4.
Если вы хотите разрешение на чтение и запись, сложите 4 и 2, что даст 6.
Если вы хотите разрешение на чтение и выполнение, сложите 4 и 1, что даст 5.
Если вы хотите разрешение на чтение, запись и выполнение, сложите 4, 2 и 1, что даст 7.
Рассмотрим примеры использования числовой нотации. Например, вы можете выполнить команды:


chmod 644 myfile
Данная команда установит права -rw-r—r—, где владелец имеет права на чтение и запись, а группа и остальные пользователи могут только читать файл.


chmod 755 script.sh
Эта команда поможет установить права -rwxr-xr-x, где владелец имеет полные права, а остальные пользователи могут только читать и выполнять скрипт.

Изменения прав для каталога
Как и для обычных файлов, вы можете изменять права доступа для каталогов с помощью команды chmod.
Права доступа к каталогам контролируют, какие операции можно выполнять внутри каталога: просмотр его содержимого, создание, удаление файлов и каталогов внутри него и так далее.

Для изменения прав доступа к каталогу используется та же числовая и символьная нотация, которую мы рассматривали ранее.
Укажите имя каталога, к которому вы хотите применить изменения прав доступа вместо имени файла. Давайте рассмотрим примеры в двух нотациях.


Символьная нотация
chmod u+rwx директория — добавить владельцу каталога права на чтение, запись и выполнение.
chmod go-r директория — удалить права на чтение для группы и остальных пользователей для каталога.
chmod a+rx директория — предоставить всем пользователям права на чтение и выполнение для каталога.
Числовая нотация
chmod 700 директория — установить права -rwx—— для владельца каталога, позволяя ему читать, записывать и выполнять операции внутри него, но никаким другим пользователям.

chmod 755 директория — предоставить владельцу полные права -rwxr-xr-x, а остальным пользователям право только на чтение и выполнение.chmod 644 директория — предоставить
права на чтение и запись для владельца каталога, а остальным пользователям и группам оставить только на чтение содержимого.

Рекурсивное применение команды chmod
Чтобы выполнить рекурсивное изменение прав доступа, используйте флаг -R или —recursive с командой chmod. Например:

chmod -R 755 каталог — установит права -rwxr-xr-x для всех файлов и каталогов внутри указанного каталога и самого каталога.
chmod -R u+rwx,go-rwx каталог — добавит владельцу права на чтение, запись и выполнение,
а группе и остальным пользователям уберет все права для всех файлов и каталогов в указанной директории и её подкаталогах.
Рекурсивное изменение прав доступа — отличный инструмент для обновления разрешений для файлов и каталогов одновременно.

Ключ —reference и его использование
Ключ —reference в команде chmod предоставляет удобный способ копирования прав доступа с одного файла или каталога на другой.
Этот ключ позволяет быстро и просто применить права доступа из одного источника к другому. Это может быть особенно полезно, когда вам нужно согласовать права доступа между элементами файловой системы.

Синтаксис использования ключа —reference выглядит следующим образом:


chmod --reference=RFILE file
—reference=RFILE. Этот аргумент указывает путь к файлу или каталогу, из которого будут скопированы права доступа.
file: это целевой файл или каталог, для которого вы хотите установить права доступа, согласно указанному источнику.
Важно отметить, что —reference не просто добавляет или удаляет определенные разрешения, а полностью перезаписывает права доступа целевого элемента.
